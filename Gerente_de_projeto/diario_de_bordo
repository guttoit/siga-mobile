							Diário de bordo do projeto de tcc


Tarefas feitas por dia:

-------------09/01/13----------------------- 

- Repensado como seriam as funções da biblioteca de preprocessamento de imagem;
- Redefinada a nomenclatura das funções de preprocessamento;


Tarefas à fazer:

- Definir nomenclatura dos nomes de variáveis, funções e bibliotecas que será utilizada; (FEITO)
- Separar cabeçalho da biblioteca de preprocessamento do código em si; (FEITO)
- Construir biblioteca de processamento e posProcessamento;


Dia 16 de janeiro de 2013 - 00:27

- Hoje foi feito uma re-organização das estruturas de diretórios do projeto, movendo os documentos do projeto para o lugar mais adequado. 
Para hoje, tentarei fazer as seguintes tarefas: 
	1. Terminar a biblioteca de processamento;
	2. Colocar os módulos na arquitetura pensada quando estava em natal, onde, essa arquitetura permite abstrair o meu código, da opencv, deixando essa dependência apenas em um módulo com as funções base da opencv, chamei esse módulo de módulo básico.

Bem, parece que é bem mais trabalhoso do que pensei, fazer essas duas tarefas. Hoje terminei as seguintes funções: CvSeq* getContours(IplImage *imgIn); IplImage* resizeImage(const CvArr *imgIn, int newSizeWidth, int newSizeHeight); 
faltando fazer o final da IplImage* getSliceFromImage(const CvArr *imgIn, int[] positionPixelUp, int[] positionPixelDown); 
Pensei aqui e achei melhor fazer essa getSliceFromImage sem usar funções prontas da openCv, já que, bastaria um laço pecorrendo a imagem de entrada da posição do pixelUp até a do pixelDown, e, durante isso, copiaria os pixel da imagem de entrada para a imagem de saída.

Criado essas funções do modulo de processamento, o proximo passo seria criar o módulo de pos-processamento, contendo as funcoes que colocam os objetos encontrados na imagem na estrutura de texto. Ou então, criar logo o módulo de leitura e escrita de dados.

Dia 28 de janeiro de 2013 - 17:46

Bem, vou resumir o que fiz após o marco anterior, do dia 16 de janeiro, e que não escrevi. Primeiramente, pensei em criar um módulo principal para fazer o controle de acesso dos outros módulos, onde, também, o usuário pode utilizar as funções que o projeto já oferece. Nesse caso fica mais fácil fazer testes e experimentos com imagens, o que será bastante utilizado na fase de treinamento do projeto. O menu principal desse programa é como o exemplo a seguir: 

Escolha uma tarefa para fazer:

1- Load an Image.
2- Equalizar por histograma.
3- Find contours and view their.
4- Realcar usando filtro smooth.

A missão para essa parte do projeto que é o usuário possa utilizar todas as funções contidas nas bibliotecs de processamento criadas, bem como visualizar o resultado da aplicação dessas funções em uma imagem.


Dia 04 de fevereiro de 2013

Hoje, vou resumir o que foi feito desde o dia 28 de janeiro até hoje. 

O projeto ta ficando cada vez mais complexo, principalmente por causa da organização que eu pensei em usar, separando tudo em vários diretórios. Quis também deixar o meu código com uma camada que fizesse o intermédio entre a opencv e os meus algoritmos e estruturas de dados, porém, isso iria aumentar mais ainda a complexidade do projeto, tornando inviável. O que devo fazer então?

Irei apagar os diretórios de pre-processamento, processamento e pos processamento e deixar todo os seus conteúdos em um único diretório, o visão. Então, as bibliotecas de pre-processamento, processamento e pos-processamento irão ficar em um único lugar, facilitando a vizualização do projeto e diminuindo a complexidade.

Outra coisa que irei fazer é acabar com a biblioteca de variaveis e flags colocando os MACROS nela contida, nas bibliotecas que fizeram a necessidade do macro existir. Por exemplo, os macros referentes aos códigos de erro irão ficar na biblioteca de tratamento de erro.

Dia 15 de fevereiro

Resumo do que foi feito do dia 04 de fevereiro até hoje:

Na parte da programação, não foi alterado muita coisa. Faltando ainda fazer as tarefas do que foi proposto do tópico acima (4 de fevereiro). Além dessas tarefas, preciso fazer uma limpeza ou refatoração no código dos modulos de visão e controle para terminá-los de uma vez e partir para o próximo passo que é criar o módulo de reconhecimento (brain). 
Rapidamente, o que se precisa fazer na refatoração é: 
	- Terminar de padronizar os nomes das funções colocando-as em inglẽs.
	- Fazer os comentários necessários nos arquivos de cabeçalho (documentação);
	- Irei apagar os diretórios de pre-processamento, processamento e pos processamento e deixar todo os seus conteúdos em um único diretório, o visão. Então, as bibliotecas de pre-processamento, processamento e pos-processamento irão ficar em um único lugar, facilitando a vizualização do projeto e diminuindo a complexidade. Outra coisa que irei fazer é acabar com a biblioteca de variaveis e flags colocando os MACROS nela contida, nas bibliotecas que fizeram a necessidade do macro existir. Por exemplo, os macros referentes aos códigos de erro irão ficar na biblioteca de tratamento de erro. (TAREFA PROPOSTA NO TÓPICO DE 04 DE FEVEREIRO).
	- Criar um arquivo makefile para compilar todos os arquivos .c e criar os arquivos objetos e/ou executáveis.
	
